resource "aws_ecs_task_definition" "main" {
  family                   = var.config.name
  execution_role_arn       = aws_iam_role.task_exec_role.arn
  task_role_arn            = aws_iam_role.task_role.arn
  network_mode             = "awsvpc"
  requires_compatibilities = ["FARGATE"]
  cpu                      = var.service.cpu
  memory                   = var.service.memory

  # volumes
  volume { name = "oneagent" host_path = "" }
  volume { name = "envoy"    host_path = "" }
  volume { name = "trust"    host_path = "" }  # <-- NEW shared cert volume

  container_definitions = jsonencode([
    {
      "name": "main",
      "image": "${aws_ecr_repository.main.repository_url}:${local.image_tags.main}",
      "essential": true,
      "volumesFrom": [],
      "secrets": ${jsonencode(var.service.secrets)},
      "dockerLabels": { "ImageTag": "${local.image_tags.main}" },
      "logConfiguration": {
        "logDriver": "awslogs",
        "options": {
          "awslogs-group":  "${aws_cloudwatch_log_group.tasks.name}",
          "awslogs-region": "${var.config.caller.region}",
          "awslogs-stream-prefix": "task"
        }
      },
      "environment": ${jsonencode(flatten([
        var.service.env_vars, [
          { "name":"LD_PRELOAD",   "value":"/opt/dynatrace/oneagent/agent/lib64/liboneagentproc.so" },
          { "name":"ENVIRONMENT",  "value":var.config.env },
          { "name":"SERVICE_NAME", "value":var.config.name }
        ]
      ]))},
      "mountPoints": [
        { "sourceVolume": "oneagent", "containerPath": "/opt/dynatrace/oneagent", "readOnly": false }
      ],
      "dependsOn": [
        { "containerName": "install-oneagent", "condition": "COMPLETE" }
      ]
    },

    {
      "name": "envoy",
      "image": "${var.config.caller.account_id}.dkr.ecr.${var.config.caller.region}.amazonaws.com/ecr-public/appmesh/aws-appmesh-envoy:v1.27.3.0-prod",
      "cpu": 100,
      "memory": 64,
      "essential": true,
      "logConfiguration": {
        "logDriver": "awslogs",
        "options": {
          "awslogs-group":  "${aws_cloudwatch_log_group.tasks.name}",
          "awslogs-region": "${var.config.caller.region}",
          "awslogs-stream-prefix": "envoy"
        }
      },
      "entryPoint": ["envoy","--config-path","/opt/envoy/config.yaml"],
      "mountPoints": [
        { "sourceVolume": "envoy", "containerPath": "/opt/envoy", "readOnly": true }
      ],
      "portMappings": [
        { "containerPort": 8443, "hostPort": 8443, "protocol": "tcp" }
      ],
      "healthCheck": {
        "command": ["CMD-SHELL","curl -f http://localhost:8081/ready"],
        "startPeriod": 5, "interval": 30, "retries": 3, "timeout": 2
      },
      "dependsOn": [
        { "containerName": "install-certs", "condition": "SUCCESS" }
      ]
    },

    /* ---------- UPDATED: install-oneagent (Alpine + curl + trust volume) ---------- */
    {
      "name": "install-oneagent",
      "image": "${var.config.caller.account_id}.dkr.ecr.${var.config.caller.region}.amazonaws.com/ecr-public/docker/library/alpine:3.18.4",
      "cpu": 50,
      "memory": 50,
      "essential": false,
      "entryPoint": ["/bin/sh","-c"],
      "command": [
        "apk add --no-cache curl ca-certificates unzip && " +
        "ARCHIVE=$(mktemp) && " +
        "curl --fail --show-error --cacert /trust/combined.pem -o \"$ARCHIVE\" " +
        "\"$DT_API_URL/v1/deployment/installer/agent/unix/paas/version/$DT_ONE_AGENT_VERSION?Api-Token=$DT_PAAS_TOKEN&$DT_ONEAGENT_OPTIONS\" && " +
        "unzip -o -d /opt/dynatrace/oneagent \"$ARCHIVE\" && rm -f \"$ARCHIVE\""
      ],
      "environment": [
        { "name":"DT_ONEAGENT_OPTIONS", "value":"flavor=musl&include=all" },
        { "name":"DT_API_URL",          "value": ${jsonencode(var.config.dynatrace.api_url)} },
        { "name":"DT_ONE_AGENT_VERSION","value": ${jsonencode(var.config.dynatrace.one_agent_version)} }
      ],
      "secrets": [
        { "name":"DT_PAAS_TOKEN", "valueFrom":"${var.config.remotes.cmn_secrets.secrets.dynatrace-api-credentials.arn}" }
      ],
      "mountPoints": [
        { "sourceVolume":"oneagent", "containerPath":"/opt/dynatrace/oneagent", "readOnly":false },
        { "sourceVolume":"trust",    "containerPath":"/trust",                  "readOnly":true  }  # <-- use PEM here
      ],
      "readonlyRootFilesystem": false,  # needed for apk add
      "logConfiguration": {
        "logDriver":"awslogs",
        "options":{
          "awslogs-group":"${aws_cloudwatch_log_group.tasks.name}",
          "awslogs-region":"${var.config.caller.region}",
          "awslogs-stream-prefix":"oneagent"
        }
      ],
      "dependsOn": [
        { "containerName": "install-certs", "condition": "SUCCESS" }  # wait for PEM
      ]
    },

    /* ---------- UPDATED: install-certs (copy PEM into /trust) ---------- */
    {
      "name": "install-certs",
      "image": "${var.config.caller.account_id}.dkr.ecr.${var.config.caller.region}.amazonaws.com/ecr-public/aws-cli/aws-cli:2.15.40",
      "cpu": 100,
      "memory": 256,
      "essential": false,
      "entryPoint": ["/bin/sh","-c"],
      "command": [
        "cd /opt/envoy && aws s3 sync s3://${var.config.remotes.cmn_buckets.artifacts.bucket.id}/envoy/ . --include '*' && ls -la && " +
        "mkdir -p /trust && aws s3 cp s3://${var.config.remotes.cmn_buckets.artifacts.bucket.id}/liquibase_foundation/combined.pem /trust/combined.pem && ls -l /trust"
      ],
      "mountPoints": [
        { "sourceVolume":"envoy", "containerPath":"/opt/envoy", "readOnly":false },
        { "sourceVolume":"trust", "containerPath":"/trust",     "readOnly":false }  # <-- writes PEM here
      ],
      "logConfiguration": {
        "logDriver":"awslogs",
        "options":{
          "awslogs-group":"${aws_cloudwatch_log_group.tasks.name}",
          "awslogs-region":"${var.config.caller.region}",
          "awslogs-stream-prefix":"cert-install"
        }
      }
    }
  ])

  runtime_platform {
    operating_system_family = "LINUX"
    cpu_architecture        = "X86_64"
  }

  depends_on = [aws_cloudwatch_log_group.tasks]
}
